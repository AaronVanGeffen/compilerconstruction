module SplAArch64StdLib (module SplAArch64StdLib) where

programPreamble :: String
programPreamble = unlines [
        ".text",
        "// Generated by SPLC"
    ]

initFunction :: String
initFunction = unlines [
        ".global main",
        ".type  main, %function",
        "main:",
        "stp x29, x30, [sp, -16]!",
        "str x28, [sp, #0]!",
        "add x29, sp, 0",
        "// setlocale",
        "adrp   x1, .LOCALE_STRING",
        "add    x1, x1, :lo12:.LOCALE_STRING",
        "mov    w0, 0",
        "bl setlocale",
        "// Set heap pointer",
        "adrp   x28, .HEAP",
        "add    x28, x28, :lo12:.HEAP",
        "// initialize global variables",
        "bl _initGlobals",
        "bl _splmain",
        "ldr x28, [sp, #0]!",
        "ldp    x29, x30, [sp], 16",
        "mov    x0, #0",
        "ret"
    ]

isEmpty :: String
isEmpty = unlines [
        "isEmpty:",
        "CMP x0, #0",
        "CSET x0, EQ",
        "RET"
    ]

print :: String
print = unlines [
        "print:",
        "B putwchar"
    ]

printInt :: String
printInt = unlines [
        "printInt:",
        "STP   x29, x30, [sp, -16]!",
        "ADD   x29, sp, 0",
        "MOV   w1, w0",
        "ADRP  x0, .INT_FORMAT_STRING",
        "ADD   x0, x0, :lo12:.INT_FORMAT_STRING",
        "BL    wprintf",
        "LDP   x29, x30, [sp], 16",
        "RET"
    ]

constants :: String
constants = unlines [
    ".section .rodata.str1.8,\"aMS\",@progbits,1",
    ".align   3",
    ".INT_FORMAT_STRING:",
    ".long      37         // %",
    ".long      100        // d",
    ".long      10         // \\n",
    ".long       0",
    ".size       .INT_FORMAT_STRING, 16",
    ".LOCALE_STRING:",
    ".string    \"en_US.UTF-8\"",
    ".data",
    ".HEAP:",
    ".space 80000, 0"
    ]
